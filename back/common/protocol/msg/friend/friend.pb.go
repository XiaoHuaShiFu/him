// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: common/protocol/msg/friend/friend.proto

package friend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	constant "him/common/protocol/constant"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加好友申请状态
type AddFriendApplicationStatus int32

const (
	AddFriendApplicationStatus_AddFriendApplicationStatusUnknown     AddFriendApplicationStatus = 0 // 未知
	AddFriendApplicationStatus_AddFriendApplicationStatusWaitConfirm AddFriendApplicationStatus = 1 // 等待确认
	AddFriendApplicationStatus_AddFriendApplicationStatusReject      AddFriendApplicationStatus = 2 // 拒绝
	AddFriendApplicationStatus_AddFriendApplicationStatusAccept      AddFriendApplicationStatus = 3 // 接受
	AddFriendApplicationStatus_AddFriendApplicationStatusExpire      AddFriendApplicationStatus = 4 // 过期
)

// Enum value maps for AddFriendApplicationStatus.
var (
	AddFriendApplicationStatus_name = map[int32]string{
		0: "AddFriendApplicationStatusUnknown",
		1: "AddFriendApplicationStatusWaitConfirm",
		2: "AddFriendApplicationStatusReject",
		3: "AddFriendApplicationStatusAccept",
		4: "AddFriendApplicationStatusExpire",
	}
	AddFriendApplicationStatus_value = map[string]int32{
		"AddFriendApplicationStatusUnknown":     0,
		"AddFriendApplicationStatusWaitConfirm": 1,
		"AddFriendApplicationStatusReject":      2,
		"AddFriendApplicationStatusAccept":      3,
		"AddFriendApplicationStatusExpire":      4,
	}
)

func (x AddFriendApplicationStatus) Enum() *AddFriendApplicationStatus {
	p := new(AddFriendApplicationStatus)
	*p = x
	return p
}

func (x AddFriendApplicationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddFriendApplicationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_protocol_msg_friend_friend_proto_enumTypes[0].Descriptor()
}

func (AddFriendApplicationStatus) Type() protoreflect.EnumType {
	return &file_common_protocol_msg_friend_friend_proto_enumTypes[0]
}

func (x AddFriendApplicationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddFriendApplicationStatus.Descriptor instead.
func (AddFriendApplicationStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{0}
}

// 获取添加好友申请请求
type GetAddFriendApplicationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID                     uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`                                         // 用户编号
	LastAddFriendApplicationID uint64 `protobuf:"varint,2,opt,name=LastAddFriendApplicationID,proto3" json:"LastAddFriendApplicationID,omitempty"` // 最后一个添加好友请求的编号（因为是反过来排序的）
	Size                       uint32 `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`                                             // 多少条
}

func (x *GetAddFriendApplicationsReq) Reset() {
	*x = GetAddFriendApplicationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddFriendApplicationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddFriendApplicationsReq) ProtoMessage() {}

func (x *GetAddFriendApplicationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddFriendApplicationsReq.ProtoReflect.Descriptor instead.
func (*GetAddFriendApplicationsReq) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{0}
}

func (x *GetAddFriendApplicationsReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetAddFriendApplicationsReq) GetLastAddFriendApplicationID() uint64 {
	if x != nil {
		return x.LastAddFriendApplicationID
	}
	return 0
}

func (x *GetAddFriendApplicationsReq) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 添加好友申请
type AddFriendApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddFriendApplicationID uint64                     `protobuf:"varint,1,opt,name=AddFriendApplicationID,proto3" json:"AddFriendApplicationID,omitempty"`         // 添加好友申请编号
	ApplicantID            uint64                     `protobuf:"varint,2,opt,name=ApplicantID,proto3" json:"ApplicantID,omitempty"`                               // 申请者用户编号
	FriendID               uint64                     `protobuf:"varint,3,opt,name=FriendID,proto3" json:"FriendID,omitempty"`                                     // 好友编号
	ApplicationMsg         string                     `protobuf:"bytes,4,opt,name=ApplicationMsg,proto3" json:"ApplicationMsg,omitempty"`                          // 申请消息
	FriendReply            string                     `protobuf:"bytes,5,opt,name=FriendReply,proto3" json:"FriendReply,omitempty"`                                // 好友回复
	Status                 AddFriendApplicationStatus `protobuf:"varint,6,opt,name=Status,proto3,enum=message.AddFriendApplicationStatus" json:"Status,omitempty"` // 申请状态
	ApplicationTime        uint64                     `protobuf:"varint,7,opt,name=ApplicationTime,proto3" json:"ApplicationTime,omitempty"`                       // 申请时间
}

func (x *AddFriendApplication) Reset() {
	*x = AddFriendApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendApplication) ProtoMessage() {}

func (x *AddFriendApplication) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendApplication.ProtoReflect.Descriptor instead.
func (*AddFriendApplication) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{1}
}

func (x *AddFriendApplication) GetAddFriendApplicationID() uint64 {
	if x != nil {
		return x.AddFriendApplicationID
	}
	return 0
}

func (x *AddFriendApplication) GetApplicantID() uint64 {
	if x != nil {
		return x.ApplicantID
	}
	return 0
}

func (x *AddFriendApplication) GetFriendID() uint64 {
	if x != nil {
		return x.FriendID
	}
	return 0
}

func (x *AddFriendApplication) GetApplicationMsg() string {
	if x != nil {
		return x.ApplicationMsg
	}
	return ""
}

func (x *AddFriendApplication) GetFriendReply() string {
	if x != nil {
		return x.FriendReply
	}
	return ""
}

func (x *AddFriendApplication) GetStatus() AddFriendApplicationStatus {
	if x != nil {
		return x.Status
	}
	return AddFriendApplicationStatus_AddFriendApplicationStatusUnknown
}

func (x *AddFriendApplication) GetApplicationTime() uint64 {
	if x != nil {
		return x.ApplicationTime
	}
	return 0
}

// 获取添加好友申请响应
type GetAddFriendApplicationsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddFriendApplications []*AddFriendApplication `protobuf:"bytes,1,rep,name=AddFriendApplications,proto3" json:"AddFriendApplications,omitempty"` // 添加好友申请
}

func (x *GetAddFriendApplicationsRsp) Reset() {
	*x = GetAddFriendApplicationsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddFriendApplicationsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddFriendApplicationsRsp) ProtoMessage() {}

func (x *GetAddFriendApplicationsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddFriendApplicationsRsp.ProtoReflect.Descriptor instead.
func (*GetAddFriendApplicationsRsp) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{2}
}

func (x *GetAddFriendApplicationsRsp) GetAddFriendApplications() []*AddFriendApplication {
	if x != nil {
		return x.AddFriendApplications
	}
	return nil
}

// 添加好友申请
type AddFriendApplicationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicantID    uint64 `protobuf:"varint,1,opt,name=ApplicantID,proto3" json:"ApplicantID,omitempty"`      // 申请人编号
	FriendID       uint64 `protobuf:"varint,2,opt,name=FriendID,proto3" json:"FriendID,omitempty"`            // 好友编号
	ApplicationMsg string `protobuf:"bytes,3,opt,name=ApplicationMsg,proto3" json:"ApplicationMsg,omitempty"` // 申请消息
}

func (x *AddFriendApplicationReq) Reset() {
	*x = AddFriendApplicationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendApplicationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendApplicationReq) ProtoMessage() {}

func (x *AddFriendApplicationReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendApplicationReq.ProtoReflect.Descriptor instead.
func (*AddFriendApplicationReq) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{3}
}

func (x *AddFriendApplicationReq) GetApplicantID() uint64 {
	if x != nil {
		return x.ApplicantID
	}
	return 0
}

func (x *AddFriendApplicationReq) GetFriendID() uint64 {
	if x != nil {
		return x.FriendID
	}
	return 0
}

func (x *AddFriendApplicationReq) GetApplicationMsg() string {
	if x != nil {
		return x.ApplicationMsg
	}
	return ""
}

// 添加好友申请响应
type AddFriendApplicationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddFriendApplicationID uint64 `protobuf:"varint,1,opt,name=AddFriendApplicationID,proto3" json:"AddFriendApplicationID,omitempty"` // 添加好友申请编号
}

func (x *AddFriendApplicationRsp) Reset() {
	*x = AddFriendApplicationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendApplicationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendApplicationRsp) ProtoMessage() {}

func (x *AddFriendApplicationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendApplicationRsp.ProtoReflect.Descriptor instead.
func (*AddFriendApplicationRsp) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{4}
}

func (x *AddFriendApplicationRsp) GetAddFriendApplicationID() uint64 {
	if x != nil {
		return x.AddFriendApplicationID
	}
	return 0
}

// 更新添加好友申请申请消息请求
type UpdateAddFriendApplicationApplicationMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddFriendApplicationID uint64 `protobuf:"varint,1,opt,name=AddFriendApplicationID,proto3" json:"AddFriendApplicationID,omitempty"` // 添加好友申请编号
	ApplicationMsg         string `protobuf:"bytes,2,opt,name=ApplicationMsg,proto3" json:"ApplicationMsg,omitempty"`                  // 申请消息
}

func (x *UpdateAddFriendApplicationApplicationMsgReq) Reset() {
	*x = UpdateAddFriendApplicationApplicationMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddFriendApplicationApplicationMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddFriendApplicationApplicationMsgReq) ProtoMessage() {}

func (x *UpdateAddFriendApplicationApplicationMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddFriendApplicationApplicationMsgReq.ProtoReflect.Descriptor instead.
func (*UpdateAddFriendApplicationApplicationMsgReq) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAddFriendApplicationApplicationMsgReq) GetAddFriendApplicationID() uint64 {
	if x != nil {
		return x.AddFriendApplicationID
	}
	return 0
}

func (x *UpdateAddFriendApplicationApplicationMsgReq) GetApplicationMsg() string {
	if x != nil {
		return x.ApplicationMsg
	}
	return ""
}

// 更新添加好友申请申请消息响应
type UpdateAddFriendApplicationApplicationMsgRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAddFriendApplicationApplicationMsgRsp) Reset() {
	*x = UpdateAddFriendApplicationApplicationMsgRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddFriendApplicationApplicationMsgRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddFriendApplicationApplicationMsgRsp) ProtoMessage() {}

func (x *UpdateAddFriendApplicationApplicationMsgRsp) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddFriendApplicationApplicationMsgRsp.ProtoReflect.Descriptor instead.
func (*UpdateAddFriendApplicationApplicationMsgRsp) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{6}
}

// 更新添加好友申请好友回复请求
type UpdateAddFriendApplicationFriendReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddFriendApplicationID uint64 `protobuf:"varint,1,opt,name=AddFriendApplicationID,proto3" json:"AddFriendApplicationID,omitempty"` // 添加好友申请编号
	FriendReply            string `protobuf:"bytes,2,opt,name=FriendReply,proto3" json:"FriendReply,omitempty"`                        // 好友回复
}

func (x *UpdateAddFriendApplicationFriendReplyReq) Reset() {
	*x = UpdateAddFriendApplicationFriendReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddFriendApplicationFriendReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddFriendApplicationFriendReplyReq) ProtoMessage() {}

func (x *UpdateAddFriendApplicationFriendReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddFriendApplicationFriendReplyReq.ProtoReflect.Descriptor instead.
func (*UpdateAddFriendApplicationFriendReplyReq) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAddFriendApplicationFriendReplyReq) GetAddFriendApplicationID() uint64 {
	if x != nil {
		return x.AddFriendApplicationID
	}
	return 0
}

func (x *UpdateAddFriendApplicationFriendReplyReq) GetFriendReply() string {
	if x != nil {
		return x.FriendReply
	}
	return ""
}

// 更新添加好友申请好友回复响应
type UpdateAddFriendApplicationFriendReplyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAddFriendApplicationFriendReplyRsp) Reset() {
	*x = UpdateAddFriendApplicationFriendReplyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddFriendApplicationFriendReplyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddFriendApplicationFriendReplyRsp) ProtoMessage() {}

func (x *UpdateAddFriendApplicationFriendReplyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddFriendApplicationFriendReplyRsp.ProtoReflect.Descriptor instead.
func (*UpdateAddFriendApplicationFriendReplyRsp) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{8}
}

// 接受添加好友请求
type AcceptAddFriendApplicationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddFriendApplicationID uint64 `protobuf:"varint,1,opt,name=AddFriendApplicationID,proto3" json:"AddFriendApplicationID,omitempty"` // 添加好友申请编号
}

func (x *AcceptAddFriendApplicationReq) Reset() {
	*x = AcceptAddFriendApplicationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptAddFriendApplicationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptAddFriendApplicationReq) ProtoMessage() {}

func (x *AcceptAddFriendApplicationReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptAddFriendApplicationReq.ProtoReflect.Descriptor instead.
func (*AcceptAddFriendApplicationReq) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{9}
}

func (x *AcceptAddFriendApplicationReq) GetAddFriendApplicationID() uint64 {
	if x != nil {
		return x.AddFriendApplicationID
	}
	return 0
}

// 接受添加好友响应
type AcceptAddFriendApplicationRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptAddFriendApplicationRsp) Reset() {
	*x = AcceptAddFriendApplicationRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptAddFriendApplicationRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptAddFriendApplicationRsp) ProtoMessage() {}

func (x *AcceptAddFriendApplicationRsp) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptAddFriendApplicationRsp.ProtoReflect.Descriptor instead.
func (*AcceptAddFriendApplicationRsp) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{10}
}

// 获取好友信息请求
type GetFriendInfosReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"` // 用户编号
}

func (x *GetFriendInfosReq) Reset() {
	*x = GetFriendInfosReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendInfosReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendInfosReq) ProtoMessage() {}

func (x *GetFriendInfosReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendInfosReq.ProtoReflect.Descriptor instead.
func (*GetFriendInfosReq) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{11}
}

func (x *GetFriendInfosReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

// 好友信息
type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendID    uint64          `protobuf:"varint,1,opt,name=FriendID,proto3" json:"FriendID,omitempty"`                  // 好友编号
	NickName    string          `protobuf:"bytes,2,opt,name=NickName,proto3" json:"NickName,omitempty"`                   // 昵称
	Username    string          `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`                   // 用户名
	Description string          `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`             // 描述
	Remark      string          `protobuf:"bytes,5,opt,name=Remark,proto3" json:"Remark,omitempty"`                       // 备注
	Avatar      string          `protobuf:"bytes,6,opt,name=Avatar,proto3" json:"Avatar,omitempty"`                       // 头像
	Gender      constant.Gender `protobuf:"varint,7,opt,name=Gender,proto3,enum=constant.Gender" json:"Gender,omitempty"` // 性别
	Disturb     bool            `protobuf:"varint,8,opt,name=Disturb,proto3" json:"Disturb,omitempty"`                    // 免打扰
	Blacklist   bool            `protobuf:"varint,9,opt,name=Blacklist,proto3" json:"Blacklist,omitempty"`                // 黑名单
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{12}
}

func (x *FriendInfo) GetFriendID() uint64 {
	if x != nil {
		return x.FriendID
	}
	return 0
}

func (x *FriendInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *FriendInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FriendInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FriendInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FriendInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FriendInfo) GetGender() constant.Gender {
	if x != nil {
		return x.Gender
	}
	return constant.Gender(0)
}

func (x *FriendInfo) GetDisturb() bool {
	if x != nil {
		return x.Disturb
	}
	return false
}

func (x *FriendInfo) GetBlacklist() bool {
	if x != nil {
		return x.Blacklist
	}
	return false
}

// 获取好友信息响应
type GetFriendInfosRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendInfos []*FriendInfo `protobuf:"bytes,1,rep,name=FriendInfos,proto3" json:"FriendInfos,omitempty"` // 好友信息列表
}

func (x *GetFriendInfosRsp) Reset() {
	*x = GetFriendInfosRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendInfosRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendInfosRsp) ProtoMessage() {}

func (x *GetFriendInfosRsp) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendInfosRsp.ProtoReflect.Descriptor instead.
func (*GetFriendInfosRsp) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{13}
}

func (x *GetFriendInfosRsp) GetFriendInfos() []*FriendInfo {
	if x != nil {
		return x.FriendInfos
	}
	return nil
}

// 获取好友信息请求
type GetFriendInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`     // 用户编号
	FriendID uint64 `protobuf:"varint,2,opt,name=FriendID,proto3" json:"FriendID,omitempty"` // 好友编号
}

func (x *GetFriendInfoReq) Reset() {
	*x = GetFriendInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendInfoReq) ProtoMessage() {}

func (x *GetFriendInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendInfoReq.ProtoReflect.Descriptor instead.
func (*GetFriendInfoReq) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{14}
}

func (x *GetFriendInfoReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetFriendInfoReq) GetFriendID() uint64 {
	if x != nil {
		return x.FriendID
	}
	return 0
}

// 获取好友信息响应
type GetFriendInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendInfo *FriendInfo `protobuf:"bytes,1,opt,name=FriendInfo,proto3" json:"FriendInfo,omitempty"` // 好友信息
}

func (x *GetFriendInfoRsp) Reset() {
	*x = GetFriendInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendInfoRsp) ProtoMessage() {}

func (x *GetFriendInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendInfoRsp.ProtoReflect.Descriptor instead.
func (*GetFriendInfoRsp) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{15}
}

func (x *GetFriendInfoRsp) GetFriendInfo() *FriendInfo {
	if x != nil {
		return x.FriendInfo
	}
	return nil
}

// 好友免打扰请求
type FriendDisturbReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendID uint64 `protobuf:"varint,1,opt,name=FriendID,proto3" json:"FriendID,omitempty"` // 好友编号
	Disturb  bool   `protobuf:"varint,2,opt,name=Disturb,proto3" json:"Disturb,omitempty"`   // 免打扰
}

func (x *FriendDisturbReq) Reset() {
	*x = FriendDisturbReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendDisturbReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendDisturbReq) ProtoMessage() {}

func (x *FriendDisturbReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendDisturbReq.ProtoReflect.Descriptor instead.
func (*FriendDisturbReq) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{16}
}

func (x *FriendDisturbReq) GetFriendID() uint64 {
	if x != nil {
		return x.FriendID
	}
	return 0
}

func (x *FriendDisturbReq) GetDisturb() bool {
	if x != nil {
		return x.Disturb
	}
	return false
}

// 好友免打扰响应
type FriendDisturbRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FriendDisturbRsp) Reset() {
	*x = FriendDisturbRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendDisturbRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendDisturbRsp) ProtoMessage() {}

func (x *FriendDisturbRsp) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendDisturbRsp.ProtoReflect.Descriptor instead.
func (*FriendDisturbRsp) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{17}
}

// 好友黑名单请求
type FriendBlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendID  uint64 `protobuf:"varint,1,opt,name=FriendID,proto3" json:"FriendID,omitempty"`   // 好友编号
	Blacklist bool   `protobuf:"varint,2,opt,name=Blacklist,proto3" json:"Blacklist,omitempty"` // 黑名单
}

func (x *FriendBlacklistReq) Reset() {
	*x = FriendBlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendBlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendBlacklistReq) ProtoMessage() {}

func (x *FriendBlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendBlacklistReq.ProtoReflect.Descriptor instead.
func (*FriendBlacklistReq) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{18}
}

func (x *FriendBlacklistReq) GetFriendID() uint64 {
	if x != nil {
		return x.FriendID
	}
	return 0
}

func (x *FriendBlacklistReq) GetBlacklist() bool {
	if x != nil {
		return x.Blacklist
	}
	return false
}

// 好友黑名单响应
type FriendBlacklistRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FriendBlacklistRsp) Reset() {
	*x = FriendBlacklistRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendBlacklistRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendBlacklistRsp) ProtoMessage() {}

func (x *FriendBlacklistRsp) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendBlacklistRsp.ProtoReflect.Descriptor instead.
func (*FriendBlacklistRsp) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{19}
}

// 删除好友请求
type DeleteFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`     // 用户编号
	FriendID uint64 `protobuf:"varint,2,opt,name=FriendID,proto3" json:"FriendID,omitempty"` // 好友编号
}

func (x *DeleteFriendReq) Reset() {
	*x = DeleteFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendReq) ProtoMessage() {}

func (x *DeleteFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendReq.ProtoReflect.Descriptor instead.
func (*DeleteFriendReq) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteFriendReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *DeleteFriendReq) GetFriendID() uint64 {
	if x != nil {
		return x.FriendID
	}
	return 0
}

// 删除好友响应
type DeleteFriendRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFriendRsp) Reset() {
	*x = DeleteFriendRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRsp) ProtoMessage() {}

func (x *DeleteFriendRsp) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRsp.ProtoReflect.Descriptor instead.
func (*DeleteFriendRsp) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{21}
}

// 获取所有好友请求
type GetAllFriendsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"` // 用户编号
}

func (x *GetAllFriendsReq) Reset() {
	*x = GetAllFriendsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFriendsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFriendsReq) ProtoMessage() {}

func (x *GetAllFriendsReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFriendsReq.ProtoReflect.Descriptor instead.
func (*GetAllFriendsReq) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{22}
}

func (x *GetAllFriendsReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

// @存储模型
// 添加好友申请
// 这里在检索的时候根据ApplicantID和FriendID查询自己的所有申请
// 根据AddFriendApplicationID逆序排序
type AddFriendApplicationStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddFriendApplication *AddFriendApplication `protobuf:"bytes,1,opt,name=AddFriendApplication,proto3" json:"AddFriendApplication,omitempty"` // 申请
}

func (x *AddFriendApplicationStore) Reset() {
	*x = AddFriendApplicationStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFriendApplicationStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendApplicationStore) ProtoMessage() {}

func (x *AddFriendApplicationStore) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendApplicationStore.ProtoReflect.Descriptor instead.
func (*AddFriendApplicationStore) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{23}
}

func (x *AddFriendApplicationStore) GetAddFriendApplication() *AddFriendApplication {
	if x != nil {
		return x.AddFriendApplication
	}
	return nil
}

// @存储模型
// 好友
type FriendStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`          // 用户编号
	FriendID    uint64 `protobuf:"varint,2,opt,name=FriendID,proto3" json:"FriendID,omitempty"`      // 用户编号
	Username    string `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`       // 用户名
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"` // 描述
	IgnoreMsg   bool   `protobuf:"varint,5,opt,name=IgnoreMsg,proto3" json:"IgnoreMsg,omitempty"`    // 忽略对方的消息
	Blacklist   bool   `protobuf:"varint,6,opt,name=Blacklist,proto3" json:"Blacklist,omitempty"`    // 黑名单
	CreatedAt   uint64 `protobuf:"varint,7,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`    // 建立时间
	UpdatedAt   uint64 `protobuf:"varint,8,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`    // 修改时间
}

func (x *FriendStore) Reset() {
	*x = FriendStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendStore) ProtoMessage() {}

func (x *FriendStore) ProtoReflect() protoreflect.Message {
	mi := &file_common_protocol_msg_friend_friend_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendStore.ProtoReflect.Descriptor instead.
func (*FriendStore) Descriptor() ([]byte, []int) {
	return file_common_protocol_msg_friend_friend_proto_rawDescGZIP(), []int{24}
}

func (x *FriendStore) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *FriendStore) GetFriendID() uint64 {
	if x != nil {
		return x.FriendID
	}
	return 0
}

func (x *FriendStore) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FriendStore) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FriendStore) GetIgnoreMsg() bool {
	if x != nil {
		return x.IgnoreMsg
	}
	return false
}

func (x *FriendStore) GetBlacklist() bool {
	if x != nil {
		return x.Blacklist
	}
	return false
}

func (x *FriendStore) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FriendStore) GetUpdatedAt() uint64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_common_protocol_msg_friend_friend_proto protoreflect.FileDescriptor

var file_common_protocol_msg_friend_friend_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x27, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x1a, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xbd, 0x02, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x16, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x20,
	0x0a, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x3b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7f, 0x0a, 0x17, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x22, 0x51, 0x0a, 0x17,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0x8d, 0x01, 0x0a, 0x2b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x36, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x16, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x22,
	0x2d, 0x0a, 0x2b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x73, 0x70, 0x22, 0x84,
	0x01, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x73,
	0x70, 0x22, 0x57, 0x0a, 0x1d, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x36, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x16, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x1f, 0x0a, 0x1d, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x2b, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x94, 0x02, 0x0a, 0x0a, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x28, 0x0a,
	0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x74, 0x75,
	0x72, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72,
	0x62, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x4a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x52, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x46, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x48, 0x0a, 0x10,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x44,
	0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x22, 0x12, 0x0a, 0x10, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x52, 0x73, 0x70, 0x22, 0x4e, 0x0a, 0x12, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70,
	0x22, 0x45, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x22, 0x2a, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6e, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x14, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf7, 0x01, 0x0a, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x2a, 0xe0, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x25, 0x0a, 0x21, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x57, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x10,
	0x01, 0x12, 0x24, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x10, 0x03, 0x12, 0x24, 0x0a,
	0x20, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x10, 0x04, 0x42, 0x20, 0x5a, 0x1e, 0x68, 0x69, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_protocol_msg_friend_friend_proto_rawDescOnce sync.Once
	file_common_protocol_msg_friend_friend_proto_rawDescData = file_common_protocol_msg_friend_friend_proto_rawDesc
)

func file_common_protocol_msg_friend_friend_proto_rawDescGZIP() []byte {
	file_common_protocol_msg_friend_friend_proto_rawDescOnce.Do(func() {
		file_common_protocol_msg_friend_friend_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_protocol_msg_friend_friend_proto_rawDescData)
	})
	return file_common_protocol_msg_friend_friend_proto_rawDescData
}

var file_common_protocol_msg_friend_friend_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_protocol_msg_friend_friend_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_common_protocol_msg_friend_friend_proto_goTypes = []interface{}{
	(AddFriendApplicationStatus)(0),                     // 0: message.AddFriendApplicationStatus
	(*GetAddFriendApplicationsReq)(nil),                 // 1: message.GetAddFriendApplicationsReq
	(*AddFriendApplication)(nil),                        // 2: message.AddFriendApplication
	(*GetAddFriendApplicationsRsp)(nil),                 // 3: message.GetAddFriendApplicationsRsp
	(*AddFriendApplicationReq)(nil),                     // 4: message.AddFriendApplicationReq
	(*AddFriendApplicationRsp)(nil),                     // 5: message.AddFriendApplicationRsp
	(*UpdateAddFriendApplicationApplicationMsgReq)(nil), // 6: message.UpdateAddFriendApplicationApplicationMsgReq
	(*UpdateAddFriendApplicationApplicationMsgRsp)(nil), // 7: message.UpdateAddFriendApplicationApplicationMsgRsp
	(*UpdateAddFriendApplicationFriendReplyReq)(nil),    // 8: message.UpdateAddFriendApplicationFriendReplyReq
	(*UpdateAddFriendApplicationFriendReplyRsp)(nil),    // 9: message.UpdateAddFriendApplicationFriendReplyRsp
	(*AcceptAddFriendApplicationReq)(nil),               // 10: message.AcceptAddFriendApplicationReq
	(*AcceptAddFriendApplicationRsp)(nil),               // 11: message.AcceptAddFriendApplicationRsp
	(*GetFriendInfosReq)(nil),                           // 12: message.GetFriendInfosReq
	(*FriendInfo)(nil),                                  // 13: message.FriendInfo
	(*GetFriendInfosRsp)(nil),                           // 14: message.GetFriendInfosRsp
	(*GetFriendInfoReq)(nil),                            // 15: message.GetFriendInfoReq
	(*GetFriendInfoRsp)(nil),                            // 16: message.GetFriendInfoRsp
	(*FriendDisturbReq)(nil),                            // 17: message.FriendDisturbReq
	(*FriendDisturbRsp)(nil),                            // 18: message.FriendDisturbRsp
	(*FriendBlacklistReq)(nil),                          // 19: message.FriendBlacklistReq
	(*FriendBlacklistRsp)(nil),                          // 20: message.FriendBlacklistRsp
	(*DeleteFriendReq)(nil),                             // 21: message.DeleteFriendReq
	(*DeleteFriendRsp)(nil),                             // 22: message.DeleteFriendRsp
	(*GetAllFriendsReq)(nil),                            // 23: message.GetAllFriendsReq
	(*AddFriendApplicationStore)(nil),                   // 24: message.AddFriendApplicationStore
	(*FriendStore)(nil),                                 // 25: message.FriendStore
	(constant.Gender)(0),                                // 26: constant.Gender
}
var file_common_protocol_msg_friend_friend_proto_depIdxs = []int32{
	0,  // 0: message.AddFriendApplication.Status:type_name -> message.AddFriendApplicationStatus
	2,  // 1: message.GetAddFriendApplicationsRsp.AddFriendApplications:type_name -> message.AddFriendApplication
	26, // 2: message.FriendInfo.Gender:type_name -> constant.Gender
	13, // 3: message.GetFriendInfosRsp.FriendInfos:type_name -> message.FriendInfo
	13, // 4: message.GetFriendInfoRsp.FriendInfo:type_name -> message.FriendInfo
	2,  // 5: message.AddFriendApplicationStore.AddFriendApplication:type_name -> message.AddFriendApplication
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_common_protocol_msg_friend_friend_proto_init() }
func file_common_protocol_msg_friend_friend_proto_init() {
	if File_common_protocol_msg_friend_friend_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_protocol_msg_friend_friend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddFriendApplicationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddFriendApplicationsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendApplicationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendApplicationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddFriendApplicationApplicationMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddFriendApplicationApplicationMsgRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddFriendApplicationFriendReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddFriendApplicationFriendReplyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptAddFriendApplicationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptAddFriendApplicationRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendInfosReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendInfosRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendDisturbReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendDisturbRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendBlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendBlacklistRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFriendsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFriendApplicationStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_protocol_msg_friend_friend_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_protocol_msg_friend_friend_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_protocol_msg_friend_friend_proto_goTypes,
		DependencyIndexes: file_common_protocol_msg_friend_friend_proto_depIdxs,
		EnumInfos:         file_common_protocol_msg_friend_friend_proto_enumTypes,
		MessageInfos:      file_common_protocol_msg_friend_friend_proto_msgTypes,
	}.Build()
	File_common_protocol_msg_friend_friend_proto = out.File
	file_common_protocol_msg_friend_friend_proto_rawDesc = nil
	file_common_protocol_msg_friend_friend_proto_goTypes = nil
	file_common_protocol_msg_friend_friend_proto_depIdxs = nil
}
