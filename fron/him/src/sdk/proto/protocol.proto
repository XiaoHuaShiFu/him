syntax = "proto3";

message LoginReq {
  string token = 1; // 用于认证用户身份
}

message LoginResp {
  string channelId = 1;
  int64 userId = 2;
}

message KickoutNotify {
  string channelId = 1;
}

// 用于找到channelId对应的用户
message Session {
  string channelId = 1;
  int64 userId = 2;
  string terminal = 3;
}

// 用于快速定位到用户的channelId
message Location {
  string channelId = 1;
}

// chat message
message MessageReq {
  int32 type = 1;
  string body = 2;
  int64 dest = 3;
  string extra = 4;
}

message MessageResp {
  int64 messageId = 1;
  int64 sendTime = 2;
}

message MessagePush {
  int64 messageId = 1;
  int32 type = 2;
  string body = 3;
  string extra = 4;
  int64 sender = 5;
  int64 sendTime = 6;
}

message ErrorResp {
  string message = 1;
}

message MessageAckReq {
  int64 messageId = 1;
}

message GroupCreateReq {
  string name = 1;
  string avatar = 2;
  string introduction = 3;
  string owner = 4;
  repeated string members = 5;
}

message GroupCreateResp {
  string group_id = 1;
}

message GroupCreateNotify {
  string group_id = 1;
  repeated string members = 2;
}

message GroupJoinReq {
  string account = 1;
  string group_id = 2;
}

message GroupQuitReq {
  string account = 1;
  string group_id = 2;
}

message GroupGetReq {
  string group_id = 1;
}

message Member {
  string account = 1;
  string alias = 2;
  string avatar = 3;
  int64 join_time = 4;
}

message GroupGetResp {
  string id = 1;
  string name = 2;
  string avatar = 3;
  string introduction = 4;
  string owner = 5;
  repeated Member members = 6;
  int64 created_at = 7;
}

message GroupJoinNotify {
  string group_id = 1;
  string account = 2;
}

message GroupQuitNotify {
  string group_id = 1;
  string account = 2;
}

message MessageIndexReq {
  int64 message_id = 1;
}

message MessageIndexResp {
  repeated MessageIndex indexes = 1;
}

message MessageIndex {
  int64 message_id = 1;
  int32 direction = 2;
  int64 send_time = 3;
  int64 userB = 4;
  string group = 5;
}

message MessageContentReq {
  repeated int64 message_ids = 1;
}

message MessageContent {
  int64 messageId = 1;
  int32 type = 2;
  string body = 3;
  string extra = 4;
}

message MessageContentResp {
  repeated MessageContent contents = 1;
}

// Token对应的Session
message TokenSession {
  int64 userId = 1;
  string terminal = 2;
}

// message Pkt {
//     uint32 Source  = 1;
//     uint64 Sequence = 3;
//     bytes  Data = 5;
// }